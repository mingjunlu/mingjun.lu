---
import { Icon } from 'astro-icon/components';
import { increasePostViewBySlug } from 'src/utils/post';

function formatDate(date: Date | string): string {
  return new Date(date).toLocaleDateString('en-US', {
    dateStyle: 'medium',
  });
}
function formatViewCount(count: number): string {
  const formatter = new Intl.NumberFormat('en-US', {
    notation: 'compact',
  });
  return formatter.format(count);
}

type Props = {
  publishedAt: string;
  readingTime: number;
  viewCount?: number;
  tags: string[];
};

const { slug } = Astro.params;
const { publishedAt, readingTime, tags } = Astro.props;
const firstTag = tags.at(0);
const viewCount = Astro.props.viewCount ?? (await increasePostViewBySlug(slug));
---

<aside>
  <div class="segment">
    <Icon name="fa6-solid:calendar" class="calendar-icon" />
    <time datetime={publishedAt}>{formatDate(publishedAt)}</time>
  </div>
  <div class="segment">
    <Icon name="fa6-solid:clock" class="clock-icon" />
    <span>{`${readingTime} min read`}</span>
  </div>
  <div class="segment">
    <Icon name="fa6-solid:eye" class="eye-icon" />
    <span>{formatViewCount(viewCount)}</span>
  </div>
  {
    !!firstTag && (
      <div class="segment">
        <Icon name="fa6-solid:tag" class="tag-icon" />
        <span>{firstTag}</span>
      </div>
    )
  }
</aside>

<style lang="scss">
  @import '../styles/variables.scss';

  aside {
    display: flex;
    gap: 12px;
    font-size: 14px;
    line-height: calc(16 / 14);
    color: var(--color-post-metadata-foreground);

    @media (min-width: $tablet-min-width) {
      gap: 16px;
      font-size: 16px;
      line-height: 1;
    }
  }
  .segment {
    flex: 0 0 auto;
    display: flex;
    align-items: center;
    gap: 8px;
    padding-left: 12px;
    border-left: 1px solid;

    &:first-child {
      padding-left: 0;
      border-left: none;
    }
    &:last-child {
      display: none;
      flex: 0 1 auto;

      @media (min-width: $tablet-min-width) {
        display: flex;
      }

      > span {
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
      }
    }

    @media (min-resolution: 2dppx) {
      border-width: 0.5px;
    }
    @media (min-width: $tablet-min-width) {
      padding-left: 16px;
    }

    svg {
      flex: 0 0 auto;
    }
    .calendar-icon {
      width: 13px;
      height: 13px;
      transform: translateY(-0.5px);

      @media (min-width: $tablet-min-width) {
        transform: translateY(-1px);
      }
    }
    .clock-icon {
      width: 14px;
      height: 14px;
      transform: translateY(-0.5px);
    }
    .eye-icon {
      width: 16px;
      height: 16px;
    }
    .tag-icon {
      width: 15px;
      height: 15px;
      transform: translateY(0.5px);

      @media (min-width: $tablet-min-width) {
        width: 16px;
        height: 16px;
        transform: none;
      }
    }
  }
</style>
